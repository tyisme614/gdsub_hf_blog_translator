<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=0.5, user-scalable=no" />
    <link rel="stylesheet" href="assets/css/main.css" />
    <script src="https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js"></script>
    <script src="assets/js/jquery.min.js"></script>
    <script src="assets/js/jquery.dropotron.min.js"></script>
    <script src="assets/js/browser.min.js"></script>
    <script src="assets/js/breakpoints.min.js"></script>
    <script src="assets/js/util.js"></script>
    <script src="assets/js/main.js"></script>
    <title>GDSub Blog Translator</title>
</head>
<body class="is-preload">
<div id="page-wrapper">
    <div class="aln-center row gtr-50">
        <section class="off-1-narrow col-6 col-12-narrower">
        <form>

            <div class="col-6 col-12-mobilep">
                <label for="target">Blog file url:</label>
                <input type="text" id="target" name="target"><br><br>
            </div>
            <div class="col-12">
                <ul class="actions">
                    <li><input type="button" class="button alt" id="sendButton" value="Let's do it!" /></li>
                    <li><input type="button" class="button alt" id="download_original" value="Download(Original)" /></li>
                    <li><input type="button" class="button alt" id="download_refined" value="Download(Refined)" /></li>
                </ul>
            </div>
        </form>

        <form>
            <div class="col-12">
<!--                <div class="col-6-normal">-->
<!--                    <h3>Initial Translation</h3>-->
<!--                    <textarea name="message" id="initial" placeholder="Initial Translation" cols="6" rows="5"></textarea>-->
<!--                </div>-->
            <progress id="progress" max="100" value="0"></progress>
            <div class="col-6-normal">
                <h3>Refined Translation</h3>
                <textarea name="message" id="refined" placeholder="Refined Translation" cols="6" rows="10"></textarea>
            </div>
            </div>
        </form>

        </section>
    </div>
</div>
</body>
<script src="https://cdn.socket.io/4.4.0/socket.io.min.js" integrity="sha384-1fOn6VtTq3PWwfsOrk45LnYcGosJwzMHv+Xh/Jx5303FVOXzEnw0EpLv30mtjmlj" crossorigin="anonymous"></script>
<script type="module">
    // import { io } from "https://cdn.socket.io/4.7.5/socket.io.esm.min.js";
    let ws_service = "ws://" + location.hostname + ":3001";
    let socket = new io(ws_service);
    socket.on("connect", () => {
       console.log('ws connected');
       // socket.send('client is connected');
        // socket.emit('events', 'client is connected');
    });

    socket.on("message", (data) => {
        console.log('received:' + data);
        let json = JSON.parse(data);
        if(json.type === 'translation'){
            // let initialArea = document.getElementById('initial');
            // initialArea.value += json.initial_translation + '\n';
            // initialArea.scrollTop = initialArea.scrollHeight;
            let refinedArea = document.getElementById('refined');
            refinedArea.value += json.refined_translation + '\n';
            refinedArea.scrollTop = refinedArea.scrollHeight;
        }else if(json.type === 'progress'){
            let progress = json.data;
            let progressbar = document.getElementById('progress');
            progressbar.value = progress;
        }
    });

    document.getElementById('sendButton').addEventListener('click',
            () => {
                const messageInput = document.getElementById('target');
                const target = messageInput.value;
                let raw = target.split('/');
                let filename = raw[raw.length - 1];
                let msg = {
                    type: 'register',
                    id: filename
                }
                // const message = '2023-in-llms.md';
                socket.send(JSON.stringify(msg));

                axios.post('/commitTask', {
                    url: target
                })
                        .then(function (response) {
                            console.log(response);
                        })
                        .catch(function (error) {
                            console.log(error);
                        });
            });

    document.getElementById('download_original').addEventListener('click',
            () => {
                const messageInput = document.getElementById('target');
                const target = messageInput.value;
                let raw = target.split('/');
                let filename = raw[raw.length - 1];
                let url = location.origin + '/file/download?target=' + filename + '&type=original';
                let url_encoded = encodeURI(url);

                window.open(url_encoded);
                // axios.get('/file/download')
                //         .then(function (response) {
                //             // handle success
                //             console.log(response);
                //         })
                //         .catch(function (error) {
                //             // handle error
                //             console.log(error);
                //             alert('encountered error:' + error.message);
                //         })
                //         .finally(function () {
                //             // always executed
                //         });
            });

</script>
</html>